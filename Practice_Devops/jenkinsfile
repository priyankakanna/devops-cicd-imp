pipeline {
    agent any
    environment {
        GITHUB_URL = 'https://github.com/priyankakanna/devops-cicd-imp/tree/main/Practice_Devops/terraform'
        WORKSPACE_DIR = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\terraform-pipeline'
    }
    stages {
        stage('Clone GitHub Repository') {
            steps {
                script {
                    git url: 'https://github.com/priyankakanna/devops-cicd-imp.git', branch: 'main'
                }
            }
        }
        
        stage('Change Directory') {
            steps {
                script {
                    dir('Practice_Devops/terraform') {
                        bat 'terraform init'
                    }
                }
            }
        }
        
        stage('Terraform Plan') {
            steps {
                script {
                    dir('Practice_Devops/terraform') {
                        bat 'terraform plan'
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    dir('Practice_Devops/terraform') {
                        bat 'terraform apply -auto-approve'
                    }
                }
            }
        }

        stage('Login to Azure') {
            steps {
                script {
                    // Ensure the correct Azure environment variables are used
                    bat """
                    az login --service-principal -u ${env.ARM_CLIENT_ID} -p ${env.ARM_CLIENT_SECRET} --tenant ${env.ARM_TENANT_ID}
                    """
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    // Get credentials for the AKS cluster
                    bat "az aks get-credentials --resource-group aks_tf_rgpriya --name my-aks-cluster123 --admin"
                    
                    // Debugging: List files to ensure deployment.yaml is in the directory
                    bat "dir"
                    
                    // Change to the correct directory and apply the Kubernetes deployment
                    dir('Practice_Devops/terraform') {
                        bat "kubectl apply -f deployment.yaml"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
        success {
            echo 'Terraform plan executed and deployment completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
